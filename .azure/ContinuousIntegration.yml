# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '22.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
    
    echo "--- Post-build script: Copying static assets for standalone output ---"
    
    mkdir -p $(System.DefaultWorkingDirectory)/.next/standalone/.next/static
    echo "Copying .next/static contents to .next/standalone/.next/static/"
    cp -R $(System.DefaultWorkingDirectory)/.next/static/* $(System.DefaultWorkingDirectory)/.next/standalone/.next/static/
    
    if [ -d "$(System.DefaultWorkingDirectory)/public" ]; then
      echo "Public folder found. Copying public contents to .next/standalone/public/"

      mkdir -p $(System.DefaultWorkingDirectory)/.next/standalone/public

      cp -R $(System.DefaultWorkingDirectory)/public/* $(System.DefaultWorkingDirectory)/.next/standalone/public/
    else
      echo "Public folder not found at $(System.DefaultWorkingDirectory)/public, skipping copy."
    fi
    
    echo "--- Finished copying static assets ---"
  displayName: 'npm install, build, and prepare standalone assets'

- script: |
    echo "--- Debugging .next/standalone structure before archiving ---"
    echo "Listing contents of $(System.DefaultWorkingDirectory)/.next/standalone:"
    ls -R $(System.DefaultWorkingDirectory)/.next/standalone
    echo "---"
    echo "Specifically, listing contents of $(System.DefaultWorkingDirectory)/.next/standalone/.next:"
    ls -R $(System.DefaultWorkingDirectory)/.next/standalone/.next
    echo "--- End Debugging ---"
  displayName: 'Debug: List .next/standalone contents before archive'
  condition: succeededOrFailed()

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/.next/standalone'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'LandingPage'
    publishLocation: 'Container'
